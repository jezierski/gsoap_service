/* soapH.h
   Generated by gSOAP 2.8.7 from homesys.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__byte
#define SOAP_TYPE_xsd__byte (18)
#endif

#define soap_default_xsd__byte(soap, a) soap_default_byte(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_xsd__byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_xsd__byte
#define soap_write_xsd__byte(soap, data) ( soap_begin_send(soap) || soap_put_xsd__byte(soap, data, "xsd:byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_xsd__byte
#define soap_read_xsd__byte(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_xsd__byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__short
#define SOAP_TYPE_xsd__short (44)
#endif

#define soap_default_xsd__short(soap, a) soap_default_short(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__short(struct soap*, const char*, int, const short *, const char*);
SOAP_FMAC3 short * SOAP_FMAC4 soap_in_xsd__short(struct soap*, const char*, short *, const char*);

#ifndef soap_write_xsd__short
#define soap_write_xsd__short(soap, data) ( soap_begin_send(soap) || soap_put_xsd__short(soap, data, "xsd:short", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__short(struct soap*, const short *, const char*, const char*);

#ifndef soap_read_xsd__short
#define soap_read_xsd__short(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__short(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 short * SOAP_FMAC4 soap_get_xsd__short(struct soap*, short *, const char*, const char*);

#ifndef SOAP_TYPE_short
#define SOAP_TYPE_short (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_short(struct soap*, short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_short(struct soap*, const char*, int, const short *, const char*);
SOAP_FMAC3 short * SOAP_FMAC4 soap_in_short(struct soap*, const char*, short *, const char*);

#ifndef soap_write_short
#define soap_write_short(soap, data) ( soap_begin_send(soap) || soap_put_short(soap, data, "short", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_short(struct soap*, const short *, const char*, const char*);

#ifndef soap_read_short
#define soap_read_short(soap, data) ( soap_begin_recv(soap) || !soap_get_short(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 short * SOAP_FMAC4 soap_get_short(struct soap*, short *, const char*, const char*);

/* _SOAP_ENC__mustUnderstand is a typedef element/attribute synonym for int */

#ifndef SOAP_TYPE__SOAP_ENC__mustUnderstand
#define SOAP_TYPE__SOAP_ENC__mustUnderstand (51)
#endif

#define soap_default__SOAP_ENC__mustUnderstand(soap, a) soap_default_int(soap, a)


#define soap_out__SOAP_ENC__mustUnderstand soap_out_int


#define soap_in__SOAP_ENC__mustUnderstand soap_in_int


#ifndef soap_write__SOAP_ENC__mustUnderstand
#define soap_write__SOAP_ENC__mustUnderstand(soap, data) ( soap_begin_send(soap) || soap_put__SOAP_ENC__mustUnderstand(soap, data, "SOAP-ENC:mustUnderstand", NULL) || soap_end_send(soap) )
#endif


#define soap_put__SOAP_ENC__mustUnderstand soap_put_int


#ifndef soap_read__SOAP_ENC__mustUnderstand
#define soap_read__SOAP_ENC__mustUnderstand(soap, data) ( soap_begin_recv(soap) || !soap_get__SOAP_ENC__mustUnderstand(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif


#define soap_get__SOAP_ENC__mustUnderstand soap_get_int


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__nonPositiveInteger
#define SOAP_TYPE_xsd__nonPositiveInteger (37)
#endif

#define soap_default_xsd__nonPositiveInteger(soap, a) soap_default_LONG64(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__nonPositiveInteger(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_xsd__nonPositiveInteger(struct soap*, const char*, LONG64 *, const char*);

#ifndef soap_write_xsd__nonPositiveInteger
#define soap_write_xsd__nonPositiveInteger(soap, data) ( soap_begin_send(soap) || soap_put_xsd__nonPositiveInteger(soap, data, "xsd:nonPositiveInteger", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__nonPositiveInteger(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_read_xsd__nonPositiveInteger
#define soap_read_xsd__nonPositiveInteger(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__nonPositiveInteger(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_xsd__nonPositiveInteger(struct soap*, LONG64 *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__negativeInteger
#define SOAP_TYPE_xsd__negativeInteger (34)
#endif

#define soap_default_xsd__negativeInteger(soap, a) soap_default_LONG64(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__negativeInteger(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_xsd__negativeInteger(struct soap*, const char*, LONG64 *, const char*);

#ifndef soap_write_xsd__negativeInteger
#define soap_write_xsd__negativeInteger(soap, data) ( soap_begin_send(soap) || soap_put_xsd__negativeInteger(soap, data, "xsd:negativeInteger", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__negativeInteger(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_read_xsd__negativeInteger
#define soap_read_xsd__negativeInteger(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__negativeInteger(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_xsd__negativeInteger(struct soap*, LONG64 *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__long
#define SOAP_TYPE_xsd__long (30)
#endif

#define soap_default_xsd__long(soap, a) soap_default_LONG64(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__long(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_xsd__long(struct soap*, const char*, LONG64 *, const char*);

#ifndef soap_write_xsd__long
#define soap_write_xsd__long(soap, data) ( soap_begin_send(soap) || soap_put_xsd__long(soap, data, "xsd:long", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__long(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_read_xsd__long
#define soap_read_xsd__long(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__long(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_xsd__long(struct soap*, LONG64 *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__integer
#define SOAP_TYPE_xsd__integer (28)
#endif

#define soap_default_xsd__integer(soap, a) soap_default_LONG64(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__integer(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_xsd__integer(struct soap*, const char*, LONG64 *, const char*);

#ifndef soap_write_xsd__integer
#define soap_write_xsd__integer(soap, data) ( soap_begin_send(soap) || soap_put_xsd__integer(soap, data, "xsd:integer", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__integer(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_read_xsd__integer
#define soap_read_xsd__integer(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__integer(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_xsd__integer(struct soap*, LONG64 *, const char*, const char*);

#ifndef SOAP_TYPE_LONG64
#define SOAP_TYPE_LONG64 (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap*, LONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);

#ifndef soap_write_LONG64
#define soap_write_LONG64(soap, data) ( soap_begin_send(soap) || soap_put_LONG64(soap, data, "long", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_read_LONG64
#define soap_read_LONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_LONG64(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__float
#define SOAP_TYPE_xsd__float (25)
#endif

#define soap_default_xsd__float(soap, a) soap_default_float(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__float(struct soap*, const char*, int, const float *, const char*);
SOAP_FMAC3 float * SOAP_FMAC4 soap_in_xsd__float(struct soap*, const char*, float *, const char*);

#ifndef soap_write_xsd__float
#define soap_write_xsd__float(soap, data) ( soap_begin_send(soap) || soap_put_xsd__float(soap, data, "xsd:float", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__float(struct soap*, const float *, const char*, const char*);

#ifndef soap_read_xsd__float
#define soap_read_xsd__float(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__float(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 float * SOAP_FMAC4 soap_get_xsd__float(struct soap*, float *, const char*, const char*);

#ifndef SOAP_TYPE_float
#define SOAP_TYPE_float (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_float(struct soap*, float *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_float(struct soap*, const char*, int, const float *, const char*);
SOAP_FMAC3 float * SOAP_FMAC4 soap_in_float(struct soap*, const char*, float *, const char*);

#ifndef soap_write_float
#define soap_write_float(soap, data) ( soap_begin_send(soap) || soap_put_float(soap, data, "float", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_float(struct soap*, const float *, const char*, const char*);

#ifndef soap_read_float
#define soap_read_float(soap, data) ( soap_begin_recv(soap) || !soap_get_float(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 float * SOAP_FMAC4 soap_get_float(struct soap*, float *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (22)
#endif

#define soap_default_xsd__double(soap, a) soap_default_double(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_xsd__double(struct soap*, const char*, double *, const char*);

#ifndef soap_write_xsd__double
#define soap_write_xsd__double(soap, data) ( soap_begin_send(soap) || soap_put_xsd__double(soap, data, "xsd:double", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__double(struct soap*, const double *, const char*, const char*);

#ifndef soap_read_xsd__double
#define soap_read_xsd__double(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__double(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_xsd__double(struct soap*, double *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__decimal
#define SOAP_TYPE_xsd__decimal (21)
#endif

#define soap_default_xsd__decimal(soap, a) soap_default_double(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__decimal(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_xsd__decimal(struct soap*, const char*, double *, const char*);

#ifndef soap_write_xsd__decimal
#define soap_write_xsd__decimal(soap, data) ( soap_begin_send(soap) || soap_put_xsd__decimal(soap, data, "xsd:decimal", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__decimal(struct soap*, const double *, const char*, const char*);

#ifndef soap_read_xsd__decimal
#define soap_read_xsd__decimal(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__decimal(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_xsd__decimal(struct soap*, double *, const char*, const char*);

#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_begin_send(soap) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__unsignedByte
#define SOAP_TYPE_xsd__unsignedByte (45)
#endif

#define soap_default_xsd__unsignedByte(soap, a) soap_default_unsignedByte(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_xsd__unsignedByte(struct soap*, const char*, unsigned char *, const char*);

#ifndef soap_write_xsd__unsignedByte
#define soap_write_xsd__unsignedByte(soap, data) ( soap_begin_send(soap) || soap_put_xsd__unsignedByte(soap, data, "xsd:unsignedByte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_read_xsd__unsignedByte
#define soap_read_xsd__unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_xsd__unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_begin_send(soap) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__unsignedShort
#define SOAP_TYPE_xsd__unsignedShort (49)
#endif

#define soap_default_xsd__unsignedShort(soap, a) soap_default_unsignedShort(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedShort(struct soap*, const char*, int, const unsigned short *, const char*);
SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_in_xsd__unsignedShort(struct soap*, const char*, unsigned short *, const char*);

#ifndef soap_write_xsd__unsignedShort
#define soap_write_xsd__unsignedShort(soap, data) ( soap_begin_send(soap) || soap_put_xsd__unsignedShort(soap, data, "xsd:unsignedShort", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__unsignedShort(struct soap*, const unsigned short *, const char*, const char*);

#ifndef soap_read_xsd__unsignedShort
#define soap_read_xsd__unsignedShort(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedShort(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_get_xsd__unsignedShort(struct soap*, unsigned short *, const char*, const char*);

#ifndef SOAP_TYPE_unsignedShort
#define SOAP_TYPE_unsignedShort (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedShort(struct soap*, unsigned short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedShort(struct soap*, const char*, int, const unsigned short *, const char*);
SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_in_unsignedShort(struct soap*, const char*, unsigned short *, const char*);

#ifndef soap_write_unsignedShort
#define soap_write_unsignedShort(soap, data) ( soap_begin_send(soap) || soap_put_unsignedShort(soap, data, "unsignedShort", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedShort(struct soap*, const unsigned short *, const char*, const char*);

#ifndef soap_read_unsignedShort
#define soap_read_unsignedShort(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedShort(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_get_unsignedShort(struct soap*, unsigned short *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__unsignedInt
#define SOAP_TYPE_xsd__unsignedInt (46)
#endif

#define soap_default_xsd__unsignedInt(soap, a) soap_default_unsignedInt(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_xsd__unsignedInt(struct soap*, const char*, unsigned int *, const char*);

#ifndef soap_write_xsd__unsignedInt
#define soap_write_xsd__unsignedInt(soap, data) ( soap_begin_send(soap) || soap_put_xsd__unsignedInt(soap, data, "xsd:unsignedInt", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_read_xsd__unsignedInt
#define soap_read_xsd__unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_xsd__unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_begin_send(soap) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__unsignedLong
#define SOAP_TYPE_xsd__unsignedLong (47)
#endif

#define soap_default_xsd__unsignedLong(soap, a) soap_default_unsignedLONG64(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedLong(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_xsd__unsignedLong(struct soap*, const char*, ULONG64 *, const char*);

#ifndef soap_write_xsd__unsignedLong
#define soap_write_xsd__unsignedLong(soap, data) ( soap_begin_send(soap) || soap_put_xsd__unsignedLong(soap, data, "xsd:unsignedLong", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__unsignedLong(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_read_xsd__unsignedLong
#define soap_read_xsd__unsignedLong(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedLong(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_xsd__unsignedLong(struct soap*, ULONG64 *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__positiveInteger
#define SOAP_TYPE_xsd__positiveInteger (39)
#endif

#define soap_default_xsd__positiveInteger(soap, a) soap_default_unsignedLONG64(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__positiveInteger(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_xsd__positiveInteger(struct soap*, const char*, ULONG64 *, const char*);

#ifndef soap_write_xsd__positiveInteger
#define soap_write_xsd__positiveInteger(soap, data) ( soap_begin_send(soap) || soap_put_xsd__positiveInteger(soap, data, "xsd:positiveInteger", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__positiveInteger(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_read_xsd__positiveInteger
#define soap_read_xsd__positiveInteger(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__positiveInteger(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_xsd__positiveInteger(struct soap*, ULONG64 *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__nonNegativeInteger
#define SOAP_TYPE_xsd__nonNegativeInteger (36)
#endif

#define soap_default_xsd__nonNegativeInteger(soap, a) soap_default_unsignedLONG64(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__nonNegativeInteger(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_xsd__nonNegativeInteger(struct soap*, const char*, ULONG64 *, const char*);

#ifndef soap_write_xsd__nonNegativeInteger
#define soap_write_xsd__nonNegativeInteger(soap, data) ( soap_begin_send(soap) || soap_put_xsd__nonNegativeInteger(soap, data, "xsd:nonNegativeInteger", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__nonNegativeInteger(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_read_xsd__nonNegativeInteger
#define soap_read_xsd__nonNegativeInteger(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__nonNegativeInteger(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_xsd__nonNegativeInteger(struct soap*, ULONG64 *, const char*, const char*);

#ifndef SOAP_TYPE_unsignedLONG64
#define SOAP_TYPE_unsignedLONG64 (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedLONG64(struct soap*, ULONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedLONG64(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_unsignedLONG64(struct soap*, const char*, ULONG64 *, const char*);

#ifndef soap_write_unsignedLONG64
#define soap_write_unsignedLONG64(soap, data) ( soap_begin_send(soap) || soap_put_unsignedLONG64(soap, data, "unsignedLong", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedLONG64(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_read_unsignedLONG64
#define soap_read_unsignedLONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedLONG64(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_unsignedLONG64(struct soap*, ULONG64 *, const char*, const char*);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "string", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__SDeviceDescription
#define SOAP_TYPE_ns1__SDeviceDescription (52)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__SDeviceDescription(struct soap*, const char*, int, const ns1__SDeviceDescription *, const char*);
SOAP_FMAC3 ns1__SDeviceDescription * SOAP_FMAC4 soap_in_ns1__SDeviceDescription(struct soap*, const char*, ns1__SDeviceDescription *, const char*);

#ifndef soap_write_ns1__SDeviceDescription
#define soap_write_ns1__SDeviceDescription(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:SDeviceDescription", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__SDeviceDescription
#define soap_read_ns1__SDeviceDescription(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__SDeviceDescription(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__SDeviceDescription * SOAP_FMAC4 soap_get_ns1__SDeviceDescription(struct soap*, ns1__SDeviceDescription *, const char*, const char*);

#define soap_new_ns1__SDeviceDescription(soap, n) soap_instantiate_ns1__SDeviceDescription(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__SDeviceDescription(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__SDeviceDescription * SOAP_FMAC2 soap_instantiate_ns1__SDeviceDescription(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__SDeviceDescription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__hexBinary
#define SOAP_TYPE_xsd__hexBinary (17)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__hexBinary(struct soap*, const char*, int, const xsd__hexBinary *, const char*);
SOAP_FMAC3 xsd__hexBinary * SOAP_FMAC4 soap_in_xsd__hexBinary(struct soap*, const char*, xsd__hexBinary *, const char*);

#ifndef soap_write_xsd__hexBinary
#define soap_write_xsd__hexBinary(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xsd:hexBinary", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xsd__hexBinary
#define soap_read_xsd__hexBinary(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__hexBinary(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xsd__hexBinary * SOAP_FMAC4 soap_get_xsd__hexBinary(struct soap*, xsd__hexBinary *, const char*, const char*);

#define soap_new_xsd__hexBinary(soap, n) soap_instantiate_xsd__hexBinary(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__hexBinary(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__hexBinary * SOAP_FMAC2 soap_instantiate_xsd__hexBinary(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__hexBinary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (13)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);

#ifndef soap_write_xsd__base64Binary
#define soap_write_xsd__base64Binary(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xsd:base64Binary", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xsd__base64Binary
#define soap_read_xsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, xsd__base64Binary *, const char*, const char*);

#define soap_new_xsd__base64Binary(soap, n) soap_instantiate_xsd__base64Binary(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__base64Binary(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__base64Binary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__anyType
#define SOAP_TYPE_xsd__anyType (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyType(struct soap*, const char*, int, const xsd__anyType *, const char*);
SOAP_FMAC3 xsd__anyType * SOAP_FMAC4 soap_in_xsd__anyType(struct soap*, const char*, xsd__anyType *, const char*);

#ifndef soap_write_xsd__anyType
#define soap_write_xsd__anyType(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xsd:anyType", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xsd__anyType
#define soap_read_xsd__anyType(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xsd__anyType * SOAP_FMAC4 soap_get_xsd__anyType(struct soap*, xsd__anyType *, const char*, const char*);

#define soap_new_xsd__anyType(soap, n) soap_instantiate_xsd__anyType(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__anyType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__anyType * SOAP_FMAC2 soap_instantiate_xsd__anyType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__anyType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns1__makeRemoteAction
#define SOAP_TYPE_ns1__makeRemoteAction (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__makeRemoteAction(struct soap*, struct ns1__makeRemoteAction *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__makeRemoteAction(struct soap*, const struct ns1__makeRemoteAction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__makeRemoteAction(struct soap*, const char*, int, const struct ns1__makeRemoteAction *, const char*);
SOAP_FMAC3 struct ns1__makeRemoteAction * SOAP_FMAC4 soap_in_ns1__makeRemoteAction(struct soap*, const char*, struct ns1__makeRemoteAction *, const char*);

#ifndef soap_write_ns1__makeRemoteAction
#define soap_write_ns1__makeRemoteAction(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__makeRemoteAction(soap, data), 0) || soap_put_ns1__makeRemoteAction(soap, data, "ns1:makeRemoteAction", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__makeRemoteAction(struct soap*, const struct ns1__makeRemoteAction *, const char*, const char*);

#ifndef soap_read_ns1__makeRemoteAction
#define soap_read_ns1__makeRemoteAction(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__makeRemoteAction(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__makeRemoteAction * SOAP_FMAC4 soap_get_ns1__makeRemoteAction(struct soap*, struct ns1__makeRemoteAction *, const char*, const char*);

#define soap_new_ns1__makeRemoteAction(soap, n) soap_instantiate_ns1__makeRemoteAction(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__makeRemoteAction(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__makeRemoteAction * SOAP_FMAC2 soap_instantiate_ns1__makeRemoteAction(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__makeRemoteAction(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__makeRemoteActionResponse
#define SOAP_TYPE_ns1__makeRemoteActionResponse (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__makeRemoteActionResponse(struct soap*, struct ns1__makeRemoteActionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__makeRemoteActionResponse(struct soap*, const struct ns1__makeRemoteActionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__makeRemoteActionResponse(struct soap*, const char*, int, const struct ns1__makeRemoteActionResponse *, const char*);
SOAP_FMAC3 struct ns1__makeRemoteActionResponse * SOAP_FMAC4 soap_in_ns1__makeRemoteActionResponse(struct soap*, const char*, struct ns1__makeRemoteActionResponse *, const char*);

#ifndef soap_write_ns1__makeRemoteActionResponse
#define soap_write_ns1__makeRemoteActionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__makeRemoteActionResponse(soap, data), 0) || soap_put_ns1__makeRemoteActionResponse(soap, data, "ns1:makeRemoteActionResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__makeRemoteActionResponse(struct soap*, const struct ns1__makeRemoteActionResponse *, const char*, const char*);

#ifndef soap_read_ns1__makeRemoteActionResponse
#define soap_read_ns1__makeRemoteActionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__makeRemoteActionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__makeRemoteActionResponse * SOAP_FMAC4 soap_get_ns1__makeRemoteActionResponse(struct soap*, struct ns1__makeRemoteActionResponse *, const char*, const char*);

#define soap_new_ns1__makeRemoteActionResponse(soap, n) soap_instantiate_ns1__makeRemoteActionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__makeRemoteActionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__makeRemoteActionResponse * SOAP_FMAC2 soap_instantiate_ns1__makeRemoteActionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__makeRemoteActionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__switchPort
#define SOAP_TYPE_ns1__switchPort (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__switchPort(struct soap*, struct ns1__switchPort *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__switchPort(struct soap*, const struct ns1__switchPort *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__switchPort(struct soap*, const char*, int, const struct ns1__switchPort *, const char*);
SOAP_FMAC3 struct ns1__switchPort * SOAP_FMAC4 soap_in_ns1__switchPort(struct soap*, const char*, struct ns1__switchPort *, const char*);

#ifndef soap_write_ns1__switchPort
#define soap_write_ns1__switchPort(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__switchPort(soap, data), 0) || soap_put_ns1__switchPort(soap, data, "ns1:switchPort", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__switchPort(struct soap*, const struct ns1__switchPort *, const char*, const char*);

#ifndef soap_read_ns1__switchPort
#define soap_read_ns1__switchPort(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__switchPort(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__switchPort * SOAP_FMAC4 soap_get_ns1__switchPort(struct soap*, struct ns1__switchPort *, const char*, const char*);

#define soap_new_ns1__switchPort(soap, n) soap_instantiate_ns1__switchPort(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__switchPort(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__switchPort * SOAP_FMAC2 soap_instantiate_ns1__switchPort(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__switchPort(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__switchPortResponse
#define SOAP_TYPE_ns1__switchPortResponse (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__switchPortResponse(struct soap*, struct ns1__switchPortResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__switchPortResponse(struct soap*, const struct ns1__switchPortResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__switchPortResponse(struct soap*, const char*, int, const struct ns1__switchPortResponse *, const char*);
SOAP_FMAC3 struct ns1__switchPortResponse * SOAP_FMAC4 soap_in_ns1__switchPortResponse(struct soap*, const char*, struct ns1__switchPortResponse *, const char*);

#ifndef soap_write_ns1__switchPortResponse
#define soap_write_ns1__switchPortResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__switchPortResponse(soap, data), 0) || soap_put_ns1__switchPortResponse(soap, data, "ns1:switchPortResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__switchPortResponse(struct soap*, const struct ns1__switchPortResponse *, const char*, const char*);

#ifndef soap_read_ns1__switchPortResponse
#define soap_read_ns1__switchPortResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__switchPortResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__switchPortResponse * SOAP_FMAC4 soap_get_ns1__switchPortResponse(struct soap*, struct ns1__switchPortResponse *, const char*, const char*);

#define soap_new_ns1__switchPortResponse(soap, n) soap_instantiate_ns1__switchPortResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__switchPortResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__switchPortResponse * SOAP_FMAC2 soap_instantiate_ns1__switchPortResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__switchPortResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getValue
#define SOAP_TYPE_ns1__getValue (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getValue(struct soap*, struct ns1__getValue *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getValue(struct soap*, const struct ns1__getValue *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getValue(struct soap*, const char*, int, const struct ns1__getValue *, const char*);
SOAP_FMAC3 struct ns1__getValue * SOAP_FMAC4 soap_in_ns1__getValue(struct soap*, const char*, struct ns1__getValue *, const char*);

#ifndef soap_write_ns1__getValue
#define soap_write_ns1__getValue(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__getValue(soap, data), 0) || soap_put_ns1__getValue(soap, data, "ns1:getValue", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getValue(struct soap*, const struct ns1__getValue *, const char*, const char*);

#ifndef soap_read_ns1__getValue
#define soap_read_ns1__getValue(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getValue(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__getValue * SOAP_FMAC4 soap_get_ns1__getValue(struct soap*, struct ns1__getValue *, const char*, const char*);

#define soap_new_ns1__getValue(soap, n) soap_instantiate_ns1__getValue(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__getValue(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__getValue * SOAP_FMAC2 soap_instantiate_ns1__getValue(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getValue(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getValueResponse
#define SOAP_TYPE_ns1__getValueResponse (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getValueResponse(struct soap*, struct ns1__getValueResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getValueResponse(struct soap*, const struct ns1__getValueResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getValueResponse(struct soap*, const char*, int, const struct ns1__getValueResponse *, const char*);
SOAP_FMAC3 struct ns1__getValueResponse * SOAP_FMAC4 soap_in_ns1__getValueResponse(struct soap*, const char*, struct ns1__getValueResponse *, const char*);

#ifndef soap_write_ns1__getValueResponse
#define soap_write_ns1__getValueResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__getValueResponse(soap, data), 0) || soap_put_ns1__getValueResponse(soap, data, "ns1:getValueResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getValueResponse(struct soap*, const struct ns1__getValueResponse *, const char*, const char*);

#ifndef soap_read_ns1__getValueResponse
#define soap_read_ns1__getValueResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getValueResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__getValueResponse * SOAP_FMAC4 soap_get_ns1__getValueResponse(struct soap*, struct ns1__getValueResponse *, const char*, const char*);

#define soap_new_ns1__getValueResponse(soap, n) soap_instantiate_ns1__getValueResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__getValueResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__getValueResponse * SOAP_FMAC2 soap_instantiate_ns1__getValueResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getValueResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getCurrentTime
#define SOAP_TYPE_ns1__getCurrentTime (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getCurrentTime(struct soap*, struct ns1__getCurrentTime *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getCurrentTime(struct soap*, const struct ns1__getCurrentTime *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getCurrentTime(struct soap*, const char*, int, const struct ns1__getCurrentTime *, const char*);
SOAP_FMAC3 struct ns1__getCurrentTime * SOAP_FMAC4 soap_in_ns1__getCurrentTime(struct soap*, const char*, struct ns1__getCurrentTime *, const char*);

#ifndef soap_write_ns1__getCurrentTime
#define soap_write_ns1__getCurrentTime(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__getCurrentTime(soap, data), 0) || soap_put_ns1__getCurrentTime(soap, data, "ns1:getCurrentTime", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getCurrentTime(struct soap*, const struct ns1__getCurrentTime *, const char*, const char*);

#ifndef soap_read_ns1__getCurrentTime
#define soap_read_ns1__getCurrentTime(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getCurrentTime(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__getCurrentTime * SOAP_FMAC4 soap_get_ns1__getCurrentTime(struct soap*, struct ns1__getCurrentTime *, const char*, const char*);

#define soap_new_ns1__getCurrentTime(soap, n) soap_instantiate_ns1__getCurrentTime(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__getCurrentTime(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__getCurrentTime * SOAP_FMAC2 soap_instantiate_ns1__getCurrentTime(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getCurrentTime(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getCurrentTimeResponse
#define SOAP_TYPE_ns1__getCurrentTimeResponse (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getCurrentTimeResponse(struct soap*, struct ns1__getCurrentTimeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getCurrentTimeResponse(struct soap*, const struct ns1__getCurrentTimeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getCurrentTimeResponse(struct soap*, const char*, int, const struct ns1__getCurrentTimeResponse *, const char*);
SOAP_FMAC3 struct ns1__getCurrentTimeResponse * SOAP_FMAC4 soap_in_ns1__getCurrentTimeResponse(struct soap*, const char*, struct ns1__getCurrentTimeResponse *, const char*);

#ifndef soap_write_ns1__getCurrentTimeResponse
#define soap_write_ns1__getCurrentTimeResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__getCurrentTimeResponse(soap, data), 0) || soap_put_ns1__getCurrentTimeResponse(soap, data, "ns1:getCurrentTimeResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getCurrentTimeResponse(struct soap*, const struct ns1__getCurrentTimeResponse *, const char*, const char*);

#ifndef soap_read_ns1__getCurrentTimeResponse
#define soap_read_ns1__getCurrentTimeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getCurrentTimeResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__getCurrentTimeResponse * SOAP_FMAC4 soap_get_ns1__getCurrentTimeResponse(struct soap*, struct ns1__getCurrentTimeResponse *, const char*, const char*);

#define soap_new_ns1__getCurrentTimeResponse(soap, n) soap_instantiate_ns1__getCurrentTimeResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__getCurrentTimeResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__getCurrentTimeResponse * SOAP_FMAC2 soap_instantiate_ns1__getCurrentTimeResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getCurrentTimeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTons1__SDeviceDescription
#define SOAP_TYPE_PointerTons1__SDeviceDescription (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__SDeviceDescription(struct soap*, ns1__SDeviceDescription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__SDeviceDescription(struct soap*, const char *, int, ns1__SDeviceDescription *const*, const char *);
SOAP_FMAC3 ns1__SDeviceDescription ** SOAP_FMAC4 soap_in_PointerTons1__SDeviceDescription(struct soap*, const char*, ns1__SDeviceDescription **, const char*);

#ifndef soap_write_PointerTons1__SDeviceDescription
#define soap_write_PointerTons1__SDeviceDescription(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__SDeviceDescription(soap, data), 0) || soap_put_PointerTons1__SDeviceDescription(soap, data, "ns1:SDeviceDescription", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__SDeviceDescription(struct soap*, ns1__SDeviceDescription *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__SDeviceDescription
#define soap_read_PointerTons1__SDeviceDescription(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__SDeviceDescription(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__SDeviceDescription ** SOAP_FMAC4 soap_get_PointerTons1__SDeviceDescription(struct soap*, ns1__SDeviceDescription **, const char*, const char*);

/* _SOAP_ENC__actor is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__SOAP_ENC__actor
#define SOAP_TYPE__SOAP_ENC__actor (50)
#endif

#define soap_default__SOAP_ENC__actor(soap, a) soap_default_string(soap, a)


#define soap_serialize__SOAP_ENC__actor(soap, a) soap_serialize_string(soap, a)


#define soap_out__SOAP_ENC__actor soap_out_string


#define soap_in__SOAP_ENC__actor soap_in_string


#ifndef soap_write__SOAP_ENC__actor
#define soap_write__SOAP_ENC__actor(soap, data) ( soap_begin_send(soap) || (soap_serialize__SOAP_ENC__actor(soap, data), 0) || soap_put__SOAP_ENC__actor(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


#define soap_put__SOAP_ENC__actor soap_put_string


#ifndef soap_read__SOAP_ENC__actor
#define soap_read__SOAP_ENC__actor(soap, data) ( soap_begin_recv(soap) || !soap_get__SOAP_ENC__actor(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif


#define soap_get__SOAP_ENC__actor soap_get_string


#ifndef SOAP_TYPE_xsd__token
#define SOAP_TYPE_xsd__token (42)
#endif

#define soap_default_xsd__token(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__token(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__token(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__token(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__token
#define soap_write_xsd__token(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__token(soap, data), 0) || soap_put_xsd__token(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__token(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__token
#define soap_read_xsd__token(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__token(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__token(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__time
#define SOAP_TYPE_xsd__time (41)
#endif

#define soap_default_xsd__time(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__time(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__time(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__time(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__time
#define soap_write_xsd__time(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__time(soap, data), 0) || soap_put_xsd__time(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__time(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__time
#define soap_read_xsd__time(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__time(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__time(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__QName
#define SOAP_TYPE_xsd__QName (40)
#endif

#define soap_default_xsd__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__QName
#define soap_write_xsd__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__QName(soap, data), 0) || soap_put_xsd__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__QName
#define soap_read_xsd__QName(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__normalizedString
#define SOAP_TYPE_xsd__normalizedString (38)
#endif

#define soap_default_xsd__normalizedString(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__normalizedString(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__normalizedString(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__normalizedString(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__normalizedString
#define soap_write_xsd__normalizedString(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__normalizedString(soap, data), 0) || soap_put_xsd__normalizedString(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__normalizedString(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__normalizedString
#define soap_read_xsd__normalizedString(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__normalizedString(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__normalizedString(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__NMTOKEN
#define SOAP_TYPE_xsd__NMTOKEN (33)
#endif

#define soap_default_xsd__NMTOKEN(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__NMTOKEN(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__NMTOKEN(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__NMTOKEN(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__NMTOKEN
#define soap_write_xsd__NMTOKEN(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__NMTOKEN(soap, data), 0) || soap_put_xsd__NMTOKEN(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__NMTOKEN(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__NMTOKEN
#define soap_read_xsd__NMTOKEN(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__NMTOKEN(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__NMTOKEN(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__NCName
#define SOAP_TYPE_xsd__NCName (32)
#endif

#define soap_default_xsd__NCName(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__NCName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__NCName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__NCName(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__NCName
#define soap_write_xsd__NCName(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__NCName(soap, data), 0) || soap_put_xsd__NCName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__NCName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__NCName
#define soap_read_xsd__NCName(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__NCName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__NCName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__Name
#define SOAP_TYPE_xsd__Name (31)
#endif

#define soap_default_xsd__Name(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__Name(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__Name(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__Name(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__Name
#define soap_write_xsd__Name(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__Name(soap, data), 0) || soap_put_xsd__Name(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__Name(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__Name
#define soap_read_xsd__Name(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__Name(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__Name(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__language
#define SOAP_TYPE_xsd__language (29)
#endif

#define soap_default_xsd__language(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__language(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__language(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__language(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__language
#define soap_write_xsd__language(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__language(soap, data), 0) || soap_put_xsd__language(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__language(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__language
#define soap_read_xsd__language(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__language(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__language(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__ID
#define SOAP_TYPE_xsd__ID (26)
#endif

#define soap_default_xsd__ID(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__ID(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__ID(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__ID(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__ID
#define soap_write_xsd__ID(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__ID(soap, data), 0) || soap_put_xsd__ID(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__ID(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__ID
#define soap_read_xsd__ID(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__ID(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__ID(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__duration
#define SOAP_TYPE_xsd__duration (23)
#endif

#define soap_default_xsd__duration(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__duration(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__duration(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__duration(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__duration
#define soap_write_xsd__duration(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__duration(soap, data), 0) || soap_put_xsd__duration(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__duration(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__duration
#define soap_read_xsd__duration(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__duration(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__duration(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__date
#define SOAP_TYPE_xsd__date (19)
#endif

#define soap_default_xsd__date(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__date(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__date(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__date(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__date
#define soap_write_xsd__date(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__date(soap, data), 0) || soap_put_xsd__date(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__date(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__date
#define soap_read_xsd__date(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__date(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__date(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);

#ifndef soap_write_PointerTounsignedByte
#define soap_write_PointerTounsignedByte(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTounsignedByte(soap, data), 0) || soap_put_PointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#ifndef soap_read_PointerTounsignedByte
#define soap_read_PointerTounsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (12)
#endif

#define soap_default_xsd__anyURI(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__anyURI(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__anyURI(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__anyURI
#define soap_write_xsd__anyURI(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__anyURI(soap, data), 0) || soap_put_xsd__anyURI(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyURI(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__anyURI
#define soap_read_xsd__anyURI(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyURI(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__anyURI(struct soap*, char **, const char*, const char*);

/* _xsd__schema is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__xsd__schema
#define SOAP_TYPE__xsd__schema (9)
#endif

#define soap_default__xsd__schema(soap, a) soap_default_string(soap, a)


#define soap_serialize__xsd__schema(soap, a) soap_serialize_string(soap, a)


#define soap_out__xsd__schema soap_out_string


#define soap_in__xsd__schema soap_in_string


#ifndef soap_write__xsd__schema
#define soap_write__xsd__schema(soap, data) ( soap_begin_send(soap) || (soap_serialize__xsd__schema(soap, data), 0) || soap_put__xsd__schema(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


#define soap_put__xsd__schema soap_put_string


#ifndef soap_read__xsd__schema
#define soap_read__xsd__schema(soap, data) ( soap_begin_recv(soap) || !soap_get__xsd__schema(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif


#define soap_get__xsd__schema soap_get_string


/* _xml__lang is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__xml__lang
#define SOAP_TYPE__xml__lang (8)
#endif

#define soap_default__xml__lang(soap, a) soap_default_string(soap, a)


#define soap_serialize__xml__lang(soap, a) soap_serialize_string(soap, a)


#define soap_out__xml__lang soap_out_string


#define soap_in__xml__lang soap_in_string


#ifndef soap_write__xml__lang
#define soap_write__xml__lang(soap, data) ( soap_begin_send(soap) || (soap_serialize__xml__lang(soap, data), 0) || soap_put__xml__lang(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


#define soap_put__xml__lang soap_put_string


#ifndef soap_read__xml__lang
#define soap_read__xml__lang(soap, data) ( soap_begin_recv(soap) || !soap_get__xml__lang(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif


#define soap_get__xml__lang soap_get_string


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#endif

/* End of soapH.h */
